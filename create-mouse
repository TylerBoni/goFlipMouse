#!/bin/bash
# Exit on error
set -e

# NDK path - update this to match your setup
NDK=$HOME/Android/Sdk/ndk/29.0.13113456
API=30
TARGET=armv7a-linux-androideabi
TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
CWD=$(pwd)

# Add NDK tools to PATH
export PATH=$TOOLCHAIN/bin:$PATH

# Create build directory in current working directory
BUILD_DIR="$CWD/build"
mkdir -p "$BUILD_DIR"

echo "=== Building for Android $API ($TARGET) ==="

# Download and extract libevdev
cd "$BUILD_DIR"
if [ ! -f "libevdev-1.13.2.tar.xz" ]; then
    echo "Downloading libevdev..."
    wget -nv https://www.freedesktop.org/software/libevdev/libevdev-1.13.2.tar.xz
fi

if [ ! -d "libevdev-1.13.2" ]; then
    echo "Extracting libevdev..."
    tar xf libevdev-1.13.2.tar.xz
fi

# Build libevdev
cd "$BUILD_DIR/libevdev-1.13.2"
echo "Configuring libevdev..."

# Configure with Android toolchain
CC="$TOOLCHAIN/bin/clang --target=$TARGET$API" \
CXX="$TOOLCHAIN/bin/clang++ --target=$TARGET$API" \
AR="$TOOLCHAIN/bin/llvm-ar" \
RANLIB="$TOOLCHAIN/bin/llvm-ranlib" \
STRIP="$TOOLCHAIN/bin/llvm-strip" \
./configure --host=$TARGET --prefix="$BUILD_DIR/install" \
            --disable-shared --enable-static

echo "Building libevdev..."
make -j$(nproc)
make install

# Now compile the mouse.c program
echo "Building mouse application..."

# Assuming mouse.c is in the current directory
cd "$CWD"
"$TOOLCHAIN/bin/clang" --target=$TARGET$API \
    -I"$BUILD_DIR/install/include" \
    -I"$BUILD_DIR/install/include/libevdev-1.0" \
    -L"$BUILD_DIR/install/lib" \
    -o "$BUILD_DIR/mouse" main.go \
    -levdev 

# Strip binary
"$TOOLCHAIN/bin/llvm-strip" "$BUILD_DIR/mouse"

echo "=== Build completed ==="
echo "Binary is at: $BUILD_DIR/mouse"

# make a zip archive with mouse, ../properties/*
cd "$CWD"
zip -r -j -o build/tMouse.zip build/mouse properties/*